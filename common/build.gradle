architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/wwoo.accesswidener")
}

repositories {
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation( "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
            { exclude group: 'net.fabricmc', module: 'fabric-loader' }

    modImplementation "maven.modrinth:cristel-lib:${rootProject.cristellib_version}-fabric"
    modImplementation "com.github.glitchfiend:TerraBlender-fabric:${rootProject.minecraft_version}-${rootProject.terrablender_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}"
    implementation("blue.endless:jankson:${rootProject.jankson_version}")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
